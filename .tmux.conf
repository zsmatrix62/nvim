set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"
# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

set -g mouse on

# # smart pane switching with awareness of vim splits
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# bind -T prefix h select-pane -L
# bind -T prefix j select-pane -D
# bind -T prefix k select-pane -U
# bind -T prefix l select-pane -R

# # use the vim resize keys.
bind < resize-pane -L 8
bind > resize-pane -R 8
bind + resize-pane -U 8
bind - resize-pane -D 8

bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# quick switch panes
bind 1 selectp -t 1
bind 2 selectp -t 2
bind 3 selectp -t 3
bind 4 selectp -t 4
bind 5 selectp -t 5

unbind -n Tab

# no escape delay
set -s escape-time 0

# --- Define colour scheme --- #
_tmux_white=colour15
_tmux_black=colour232
_tmux_red=colour1
_tmux_purple=colour54
_tmux_grey_l=colour145
_tmux_grey_d=colour236
_tmux_blue=colour25
_tmux_blue_d=colour17
# ---------------------------- #

# helps in faster key repetition
set -sg escape-time 0

# Panes
set -g pane-active-border-style "fg=$_tmux_red"
set -g message-style "fg=$_tmux_grey_l,bg=$_tmux_grey_d"
set -g pane-border-style "fg=white"
set -g display-panes-colour "black"
set -g display-panes-active-colour "white"

set -g pane-border-status "off"
set -g pane-border-format "[#[fg=white]#{?pane_active,#[bold],} :#P: #{s/ //:pane_title} #[fg=default,nobold]]"

set -g base-index 1 # 设置窗口的起始下标为1
set -g pane-base-index 1 # 设置面板的起始下标为1

# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-session'  'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'

# Messages
set -g message-command-style "fg=$_tmux_grey_l,bg=$_tmux_grey_d"
set -g display-time 5000

# focus events
set -g focus-events on

# increase history limit
set -g history-limit 30000
setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知

# Status line

## Variables
_tmux_status_bg="#{?pane_in_mode,$_tmux_blue_d,#{?pane_synchronized,${_tmux_purple},${_tmux_blue}}}"
_tmux_prefix_on="#[fg=$_tmux_white,bg=$_tmux_status_bg,bold] #{?client_prefix,=, } "

## Line definition
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g status-right-style "none"
set -g status-style "fg=$_tmux_grey_d,bg=$_tmux_black,none"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "fg=$_tmux_red,bg=$_tmux_black,none"
set -g status-left "${_tmux_prefix_on}#[fg=$_tmux_white,bg=$_tmux_status_bg,bold]#S#[nobold]${_tmux_prefix_on}#[fg=$_tmux_grey_d,bg=$_tmux_black]"
set -g status-right "#[fg=$_tmux_white,bg=$_tmux_status_bg]${_tmux_prefix_on}C:#{cpu_percentage} R:#{ram_percentage} | %Y-%m-%d %H:%M${_tmux_prefix_on}"
setw -g window-status-format "#[fg=$_tmux_white,bg=$_tmux_black] #{?window_last_flag,:, }#I#{?window_last_flag,:, }#[fg=$_tmux_grey_l,bg=$_tmux_black] #W #{?#{!=:#{window_panes},1},(#{window_panes}) ,}"
setw -g window-status-current-format "#[fg=$_tmux_white,bg=$_tmux_grey_d,bold] [#I] #W #{?#{!=:#{window_panes},1},(#{window_panes}) #F ,}#[fg=$_tmux_grey_l,bg=$_tmux_black]"
setw -g window-status-separator "┃"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'b0o/tmux-autoreload'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-yank'

## Plugin Settings

run '~/.tmux/plugins/tpm/tpm'
